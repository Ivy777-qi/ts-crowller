[{"D:\\web\\typescript\\react-fronted\\src\\index.tsx":"1","D:\\web\\typescript\\react-fronted\\src\\App.tsx":"2","D:\\web\\typescript\\react-fronted\\src\\page\\login\\index.tsx":"3","D:\\web\\typescript\\react-fronted\\src\\page\\Home\\index.tsx":"4"},{"size":159,"mtime":1607681288416,"results":"5","hashOfConfig":"6"},{"size":359,"mtime":1607680416886,"results":"7","hashOfConfig":"6"},{"size":1810,"mtime":1607595515728,"results":"8","hashOfConfig":"6"},{"size":3666,"mtime":1607680416887,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wkkcpv",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},"D:\\web\\typescript\\react-fronted\\src\\index.tsx",[],"D:\\web\\typescript\\react-fronted\\src\\App.tsx",[],"D:\\web\\typescript\\react-fronted\\src\\page\\login\\index.tsx",["21"],"import React,{Component} from 'react';\r\nimport qs from 'qs';\r\nimport { Form, Input,Button,message } from 'antd';\r\nimport axios from 'axios';\r\nimport Home from '../Home';\r\n\r\nimport './style.css';\r\n\r\n//const Button = require('antd-mobile/lib/button');\r\n\r\nclass Login extends Component{\r\n  state={\r\n    login:false\r\n  }\r\n  componentDidMount(){\r\n    this.isLogin();\r\n  }\r\n  isLogin=()=>{    \r\n     axios.get('/api').then(res=>{\r\n      if(res.data.data){\r\n        this.setState({\r\n          login:true\r\n        })\r\n      }\r\n     });\r\n  }\r\n   onFinish = values => {\r\n    axios.post('/api/login',qs.stringify(values) ).then(res=>{\r\n      if(res.data.data){\r\n        this.setState({\r\n          login:true\r\n        })\r\n      }else{\r\n        alert('please try again');\r\n      }\r\n     });\r\n  };\r\n onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  render(){\r\n    const {login}=this.state;\r\n    const layout = {\r\n      labelCol: { span: 8 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n    const tailLayout = {\r\n      wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n    if(!login){\r\n      return (\r\n        <div className= 'loginForm'>\r\n          <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={this.onFinish}\r\n      >\r\n        \r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" className='button'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      </div>\r\n    )\r\n    }else{\r\n      return <Home/>\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default Login;",["22","23"],"D:\\web\\typescript\\react-fronted\\src\\page\\Home\\index.tsx",["24","25","26"],"import React,{Component} from 'react';\r\nimport {Button } from 'antd';\r\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\r\nimport moment from 'moment';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/line';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport axios from 'axios';\r\nimport Login from '../login';\r\n\r\nimport './style.css';\r\n\r\nclass Home extends Component{\r\nstate={\r\n  login:true,\r\n  lineChart:false,\r\n  data:{}\r\n}\r\n\r\n  getData=()=>{\r\n    axios.get('/api/getdata').then(res=>{\r\n      if(res.data.data){\r\n        alert('Get Data Success!');\r\n      }\r\n    \r\n    })\r\n  }\r\n  showData=()=>{\r\n    axios.get('/api/showdata').then(res=>{\r\n      if(res.data.data){\r\n        this.setState({\r\n          lineChart:true,\r\n          data:res.data.data,\r\n        })\r\n      }\r\n    \r\n    })\r\n  }\r\n  handleSignOut=()=>{\r\n    axios.get('/api/loginout').then(res=>{\r\n      if(!res.data.data){\r\n        this.setState({\r\n          login:false\r\n        })\r\n       }\r\n  \r\n    })\r\n  }\r\n  getOption=()=>{\r\n    const {data}=this.state;\r\n    const arrTitle:string[] = [];\r\n    const times:string[] = [];\r\n    const titleData:{\r\n      [title:string]:number[]\r\n    }={}\r\n    let num={};\r\n        for(let key in data){\r\n          const arr= data[key];\r\n          times.push(moment(Number(key)).format('MM-DD HH:mm'));\r\n          arr.map(item=>{\r\n           \r\n            const id =(num as any).id;\r\n            const{title,count}=item;\r\n            if(arrTitle.indexOf(title)===-1){\r\n                arrTitle.push(title);\r\n            }\r\n          // if(!num[index]){\r\n          //   num[index]=[];\r\n          //   num[index].push(count);\r\n          // }else{\r\n          //   num[index].push(count);\r\n          // }\r\n         \r\n            if(!titleData[title]){ //主要判断是否存在,并且在[]\r\n              titleData[title]=[];\r\n              titleData[title].push(count);\r\n          }else{\r\n            titleData[title].push(count);\r\n          }\r\n          console.log(titleData);\r\n          })   \r\n      }\r\n      const result:any=[];\r\n      for(let i in titleData){\r\n        result.push(\r\n          {\r\n            name: i,\r\n            type: 'line',\r\n            data: titleData[i]\r\n        }\r\n        )\r\n          \r\n      }\r\n    const option = {\r\n      title: {\r\n          text: 'Crowller Data'\r\n      },\r\n      tooltip: {\r\n          trigger: 'axis'\r\n      },\r\n      legend: {\r\n          data: arrTitle\r\n      },\r\n      grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n      },\r\n      xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: times,\r\n      },\r\n      yAxis: {\r\n          type: 'value'\r\n      },\r\n      series:result\r\n      }\r\n      return option;\r\n  }\r\n\r\n  render(){\r\n    const {login,lineChart}=this.state;\r\n    if(login){\r\n      if(lineChart){\r\n        return(\r\n          <div className= 'showLine'>\r\n           <Button onClick={this.getData}>Get Data</Button>\r\n           <Button onClick={this.handleSignOut}>Sign Out</Button>\r\n           <ReactEchartsCore\r\n           echarts={echarts}\r\n            option={this.getOption()}\r\n            style={{ height: '300px', width: '100%' }}\r\n          />\r\n        </div>\r\n        )\r\n      }else{\r\n        return (\r\n          <div className= 'Home'>\r\n           <Button onClick={this.getData}>Get Data</Button>\r\n           <Button onClick={this.showData}>Show Data</Button>\r\n           <Button onClick={this.handleSignOut}>Sign Out</Button>\r\n        </div>\r\n        )\r\n      }\r\n     \r\n    }else{\r\n      return <Login/>\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;",{"ruleId":"27","severity":1,"message":"28","line":3,"column":29,"nodeType":"29","messageId":"30","endLine":3,"endColumn":36},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"27","severity":1,"message":"35","line":15,"column":11,"nodeType":"29","messageId":"30","endLine":15,"endColumn":21},{"ruleId":"36","severity":1,"message":"37","line":67,"column":23,"nodeType":"38","messageId":"39","endLine":67,"endColumn":25},{"ruleId":"27","severity":1,"message":"40","line":69,"column":19,"nodeType":"29","messageId":"30","endLine":69,"endColumn":21},"@typescript-eslint/no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"'FixedArray' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]